{"version":3,"file":"static/js/76.73452809.chunk.js","mappings":"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","sources":["components/ArticleItem.tsx","components/ArticlesList.tsx","components/Filter.tsx","pages/ArticlesBoard.tsx","redux/hooks.ts","redux/operation.ts"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../redux/hooks\";\r\nimport { Article } from \"../redux/articlesSlice\";\r\nimport { Grid, Typography, Box} from \"@mui/material\";\r\nimport AspectRatio from '@mui/joy/AspectRatio';\r\nimport Card from '@mui/joy/Card';\r\nimport CardOverflow from '@mui/joy/CardOverflow';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport { ReadMore } from \"./ReadMore\";\r\n\r\ninterface IProps {\r\n  articleInfo: Article;\r\n}\r\n\r\nexport const ArticleItem: React.FC<IProps> = ({\r\n  articleInfo: { imageUrl, title, summary, updatedAt, id },\r\n}) => {\r\n  const { value } = useAppSelector((state) => state.filter);\r\n    const [isReadMore, setIsReadMore] = useState(true);\r\n\r\n  const valueAsArray = value.toLowerCase().split(\" \");\r\n  \r\n\r\n   const renderMarkedTitle = () => {\r\n    const titleAsArray = title.toLowerCase().split(\" \");\r\n    return titleAsArray.map((word: string, index: number) => {\r\n      if (valueAsArray.includes(word))\r\n        return (\r\n          <span key={index} style={{ backgroundColor: \"yellow\" }}>\r\n            {word + \" \"}\r\n          </span>\r\n        );\r\n      else return \" \" + word + \" \";\r\n    });\r\n  };\r\n\r\n  const renderMarkedSummary = () => {\r\n    const summaryAsArray = summary.toLowerCase().split(\" \");\r\n    return summaryAsArray.map((word: string, index: number) => {\r\n      if (valueAsArray.includes(word))\r\n        return (\r\n          <span key={index} style={{ backgroundColor: \"yellow\" }}>\r\n            {word}\r\n          </span>\r\n        );\r\n      else return \" \" + word + \" \";\r\n    });\r\n  };\r\n\r\n  const toggleReadMore = () => {\r\n    setIsReadMore(!isReadMore);\r\n    };\r\n  \r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n        <Card variant=\"outlined\" sx={{ height: \"530px\", borderColor: \"#EAEAEA\", borderRadius: \"5px\" }}>\r\n                <Link \r\n        style={{textDecoration: 'none', color: 'inherit'}}\r\n        to={{ pathname: `/articles/${id}` }}\r\n      >\r\n\r\n        <CardOverflow sx={{mb: \"25px\"}}>\r\n          <AspectRatio ratio=\"2\">\r\n            <img\r\n              src={imageUrl}\r\n              loading=\"lazy\"\r\n              alt={title}\r\n            />\r\n        </AspectRatio>\r\n        </CardOverflow>\r\n        <Box sx={{display: \"flex\", mb: \"24px\"}}>\r\n          <CalendarTodayIcon sx={{color: \"#363636\"}} />\r\n          <Typography sx={{ml: \"8px\", color: \"#363636\"}}>{new Date(updatedAt).toDateString()}</Typography>\r\n        </Box>\r\n          <Typography variant=\"h2\" sx={{\r\n            fontFamily: 'Montserrat',\r\n            fontWeight: 400,\r\n            fontSize: \"24px\",\r\n            lineHeight: 1.2,\r\n            mb: \"20px\"\r\n          }}\r\n          >\r\n            {renderMarkedTitle()}\r\n            </Typography>\r\n        <Typography sx={{fontFamily: 'Montserrat',\r\n            fontWeight: 400,\r\n            fontSize: \"16px\",\r\n            lineHeight: 1.2,\r\n            mb: \"20px\"}}>\r\n        {isReadMore ? summary.slice(0, 100) : renderMarkedSummary()}\r\n      </Typography>\r\n           </Link>\r\n\r\n      <Typography\r\n        sx={{display: 'flex', alignItems: \"center\", gap: \"6px\", color: \"000\", fontSize: \"16px\", fontWeight: 600, cursor: 'pointer' }}\r\n        onClick={toggleReadMore}\r\n      >\r\n        {isReadMore ? \"...read more\" : \" show less\"}\r\n        <ArrowForwardIcon sx={{ color: \"#363636\", fontSize: \"15px\"}} />\r\n      </Typography>\r\n        \r\n          \r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n","import { ArticleItem } from \"./ArticleItem\";\r\nimport { Article } from \"../redux/articlesSlice\";\r\nimport { useAppSelector } from \"../redux/hooks\";\r\nimport {Grid, Typography, Divider} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\n\r\ninterface Iprops {\r\n  articlesList: Article[];\r\n}\r\n\r\nexport const ArticlesList: React.FC<Iprops> = () => {\r\n  const {value} = useAppSelector((state) => state.filter);\r\n  const { articlesList } = useAppSelector((state) => state.articles);\r\n\r\n  const filteredArticles = articlesList.filter((article: Article) => article.title.toLowerCase().includes(value.toLowerCase()) || article.summary.toLowerCase().includes(value.toLowerCase()))\r\nconst countArticles = filteredArticles.length\r\n\r\n  return (\r\n    <>\r\n      <Typography>Results: {countArticles}</Typography>\r\n      <Divider sx={{mb: \"45px\"}}/>\r\n    <Grid container spacing={\"45px\"} sx={{listStyle: 'none'}}>\r\n      {filteredArticles.map((article: Article) => (\r\n        <ArticleItem key={article.id} articleInfo={article}/>\r\n      ))}\r\n    </Grid>\r\n    </>\r\n        \r\n  );\r\n};\r\n","import { useAppDispatch } from \"../redux/hooks\";\r\nimport { setFilter } from \"../redux/filterSlice\";\r\nimport React from \"react\";\r\nimport { Box, InputAdornment, TextField, Typography } from \"@mui/material\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nexport const Filter: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  return (\r\n    <Box sx={{display: 'inline-grid'}}>\r\n      <Typography\r\n        sx={{\r\n          mb: 1,\r\n          fontFamily: 'Montserrat',\r\n          fontWeight: 600,\r\n          lineHeight: 1.5\r\n        }}\r\n      >\r\n        Filter by keywords\r\n      </Typography> \r\n      <TextField\r\n        sx={{\r\n          height: 50,\r\n          width: 600,\r\n          input: {\r\n            color: '#575757',\r\n            fontWeight: 400,\r\n          },\r\n          boxShadow: 5,\r\n          mb: \"40px\"\r\n        }}\r\n        onChange={(evt) => dispatch(setFilter(evt.currentTarget.value))}\r\n        type=\"text\"\r\n        InputProps={{\r\n       startAdornment: (\r\n      <InputAdornment position=\"start\">\r\n        <SearchIcon />\r\n      </InputAdornment>\r\n    )\r\n  }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useAppSelector, useAppDispatch } from \"../redux/hooks\";\r\nimport { fetchArticles } from \"../redux/operation\";\r\nimport { ArticlesList } from \"../components/ArticlesList\";\r\nimport { Filter } from \"../components/Filter\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nconst ArticlesBoard: React.FC = () => {\r\n  const { articlesList, isLoading, error } = useAppSelector((state) => state.articles);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchArticles());\r\n  }, []);\r\n\r\n  return (\r\n    <Container sx={{px: '75px', py: '50px'}}>\r\n      <section>\r\n        {isLoading && <b>Loading articles...</b>}\r\n        {error && <b>{error}</b>}\r\n        <Filter/>\r\n        <ArticlesList articlesList={articlesList} />\r\n      </section>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ArticlesBoard;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import axios from \"axios\";\r\nimport { fetchingByIdInProgress, fetchingByIdSuccess, fetchingByIdError } from \"./articleSlice\";\r\nimport {\r\n  fetchingInProgress,\r\n  fetchingSuccess,\r\n  fetchingError,\r\n} from \"./articlesSlice\";\r\n\r\naxios.defaults.baseURL =\r\n  \"https://api.spaceflightnewsapi.net/v3\";\r\n\r\nexport const fetchArticles = () => async (dispatch: any) => {\r\n  try {\r\n    dispatch(fetchingInProgress());\r\n    const response = await axios.get(\r\n      \"/articles\"\r\n    );\r\n    dispatch(fetchingSuccess(response.data));\r\n  } catch (error: any) {\r\n    dispatch(fetchingError(error.message));\r\n  }\r\n};\r\n\r\nexport const fetchArticleById = (id: string | undefined) => async (dispatch: any) => {\r\n  try {\r\n    dispatch(fetchingByIdInProgress());\r\n    const response = await axios.get(\r\n      `/articles/${id}`\r\n    );\r\n    dispatch(fetchingByIdSuccess(response.data));\r\n  } catch (error: any) {\r\n    dispatch(fetchingByIdError(error.message));\r\n  }\r\n};\r\n\r\n"],"names":["ArticleItem","articleInfo","imageUrl","title","summary","updatedAt","id","value","useAppSelector","state","filter","useState","isReadMore","setIsReadMore","valueAsArray","toLowerCase","split","Grid","item","xs","md","Card","variant","sx","height","borderColor","borderRadius","style","textDecoration","color","to","pathname","CardOverflow","mb","AspectRatio","ratio","src","loading","alt","Box","display","CalendarToday","Typography","ml","Date","toDateString","fontFamily","fontWeight","fontSize","lineHeight","map","word","index","includes","backgroundColor","slice","alignItems","gap","cursor","onClick","ArrowForward","ArticlesList","filteredArticles","articles","articlesList","article","countArticles","length","Divider","container","spacing","listStyle","Filter","dispatch","useAppDispatch","TextField","width","input","boxShadow","onChange","evt","setFilter","currentTarget","type","InputProps","startAdornment","InputAdornment","position","Search","isLoading","error","useEffect","fetchArticles","Container","px","py","useDispatch","useSelector","axios","fetchingInProgress","response","fetchingSuccess","data","fetchingError","message","fetchArticleById","fetchingByIdInProgress","fetchingByIdSuccess","fetchingByIdError"],"sourceRoot":""}